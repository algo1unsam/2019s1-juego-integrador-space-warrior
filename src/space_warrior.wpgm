import wollok.game.*
import nave.*
import enemigos.*
import enemigosMalos.*
import disparo.*

program space_warrior {
	
	game.title("SpaceWarrior")
	game.height(12)
	game.width(14)
	game.ground("ground.png")
	game.addVisual(nave)
	
	const enemigos = [ new Enemigo(position = game.at(1,11), pasos=1),
		new Enemigo(position = game.at(3,11)), 
		new Enemigo(position = game.at(5,11)), 
		new Enemigo(position = game.at(6,11), pasos=3), 
		new Enemigo(position = game.at(8,11), pasos=3), 
		new Enemigo(position = game.at(10,11))
	]
	enemigos.forEach{ enemigo => game.addVisual(enemigo) }
	
	const movimientoNave = { =>
		keyboard.left().onPressDo{ nave.position(nave.position().left(1))}
		keyboard.right().onPressDo{ nave.position(nave.position().right(1))}
		keyboard.up().onPressDo{ nave.disparoInicial()}
	}
	const colisiones = { =>
		game.whenCollideDo(nave, { disparo => disparo.impactar(nave)})
		enemigos.forEach{ enemigo => game.whenCollideDo(enemigo, { disparo => disparo.impactar(enemigo)})}
	}
	const pasarDeNivel = { =>
		game.clear()
		game.addVisual(nave)
		nave.subirNivel()
		nave.muertes(0)
		if (nave.nivel() < 4) {
			game.say(nave, "NIVEL" + nave.nivel())
		}
	}
	
	const perderJuego = { => game.onTick(1000, "perderJuego", { =>
		if (nave.estaMuerto()) {
			nave.finDelJuego()
		}
	}) }

	movimientoNave.apply()//fijate si esto lo dejas asi, haces una excepcion o lo metes adentro del keyboard
	colisiones.apply()
	perderJuego.apply()	

keyboard.space().onPressDo { 

	game.onTick(7000, "comenzarDisparos", { => enemigos.forEach{enemigo => enemigo.disparoInicial()}})	
	game.onTick(4000, "comenzarDesplazamiento", { => enemigos.forEach{enemigo => enemigo.desplazarse()}})
	game.onTick(1000, "quitarEnemigosMuertos", { => enemigos.removeAllSuchThat { enemigo => enemigo.estaMuerto()}})

//------------------------------------------- Nivel 2 -----------------------------------------------------

game.onTick(1000, "pasarANivel2", {=>

		 if (nave.nivel() == 1 and (nave.muertes() == 6)) {		
		 	
		 		pasarDeNivel.apply()
				enemigos.add(new EnemigoMalo(position = game.at(2, 11), pasos = 1, msegs=3000))
				enemigos.add(new EnemigoMalo(position = game.at(4, 11), pasos = 2, msegs=3000))
				enemigos.add(new EnemigoMalo(position = game.at(6, 11), pasos = 3, msegs=3000))
				enemigos.add(new EnemigoMalo(position = game.at(8, 11), pasos = 2, msegs=3000))
				enemigos.add(new EnemigoMalo(position = game.at(10, 11),pasos = 1, msegs=3000))
				enemigos.forEach{ enemigo => game.addVisual(enemigo)}
				movimientoNave.apply()
				colisiones.apply()	
				perderJuego.apply()	
				game.onTick(10000, "comenzarDesplazamiento", { => enemigos.forEach{enemigo => enemigo.desplazarse()}})				
				game.onTick(6000, "comenzarDisparos", { => enemigos.forEach{enemigo => enemigo.disparoInicial()}})
				game.onTick(1000, "quitarEnemigosMuertos", { => enemigos.removeAllSuchThat { enemigo => enemigo.estaMuerto()}})
				pasarANivel3.apply()			


		}})

}

//-------------------------------------------- Nivel 3 -----------------------------------------------------
const pasarANivel3 = {=> game.onTick(1000, "pasarANivel3", {=>
	
		if (nave.nivel() == 2 and (nave.muertes() == 5)) {
			pasarDeNivel.apply()
			enemigos.add(new EnemigoMalo(position = game.at(2, 11), pasos = 1, msegs=3000))
			enemigos.add(new EnemigoMalo(position = game.at(9, 11), pasos = 1, msegs=3000))
			enemigos.add(new EnemigoMuyMalo(position = game.at(5,9), pasos = 1, msegs=3000))
			enemigos.forEach{ enemigo => game.addVisual(enemigo)}
			movimientoNave.apply()
			colisiones.apply()
			perderJuego.apply()	
			game.onTick(5000, "comenzarDesplazamiento", { => enemigos.forEach{enemigo => enemigo.desplazarse()}})
			game.onTick(9000, "comenzarDisparos", { => enemigos.forEach{enemigo => enemigo.disparoInicial()}})
			game.onTick(1000, "quitarEnemigosMuertos", { => enemigos.removeAllSuchThat { enemigo => enemigo.estaMuerto()}})
			finDelJuego.apply()
			
		}
	}) }	
	
//------------------------------------------- Fin del juego ---------------------------------------------
	
const finDelJuego = {=> game.onTick(1000, "finDelJuego", {=>
	
	if (nave.nivel() == 3 and (nave.muertes() == 3)){
		pasarDeNivel.apply()
		game.say(nave, "GANASTE")
		game.say(nave, "CHAU!")
		nave.finDelJuego()
	}

}	)}

	game.errorReporter(nave)
	
	game.start()

}